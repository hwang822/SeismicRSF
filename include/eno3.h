/* This file is automatically generated. DO NOT EDIT! */

#ifndef _eno3_h
#define _eno3_h


#include <rsf.h>


typedef struct Eno3 *eno3;
/* abstract data type */


eno3 eno3_init (int order              /* interpolation order */, 
		int n1, int n2, int n3 /* data dimensions */);
/*< Initialize interpolation object >*/


void eno3_set (eno3 pnt, float*** c /* data [n3][n2][n1] */);
/*< Set the interpolation table. c can be changed or freed afterwords. >*/


void eno3_set1 (eno3 pnt, float* c /* data [n3*n2*n1] */);
/*< Set the interpolation table. c can be changed or freed afterwords. >*/


void eno3_close (eno3 pnt);
/*< Free internal storage. >*/


void eno3_apply (eno3 pnt, 
		 int i, int j, int k       /* grid location */, 
		 float x, float y, float z /* offsets from grid */,
		 float* f                  /* output data */, 
		 float* f1                 /* output derivative [3] */, 
		 der what                  /* to compute [FUNC|DER|BOTH] */);
/*< Apply interpolation. >*/

#endif
