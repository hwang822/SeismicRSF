/* This file is automatically generated. DO NOT EDIT! */

#ifndef _fint1_h
#define _fint1_h


#include <rsf.h>


typedef struct Vint1 *vint1;
typedef struct Fint1 *fint1;
/* abstract data types */


typedef float (*mapfunc)(float,int);


float* fint1_coeff (fint1 fnt, int n);
/*< extract n-th spline coefficient >*/


float* vint1_coeff (vint1 fnt, int n, int dim);
/*< extract n-th spline coefficient for dimension dim >*/


vint1 vint1_init (int nw  /* trace extension */, 
		  int n1  /* trace length */, 
		  int dim /* number of functions */);
/*< initialize multi-function interpolation >*/


fint1 fint1_init (int nw /* trace extension */, 
		  int n1 /* trace length */,
		  int mute /* taper length */);
/*< intialize single-function interpolation >*/


void vint1_set (vint1 fnt, float** dat /* [dim][n1] */);
/*< set multi-function grid >*/


void fint1_set (fint1 fnt, float* dat);
/*< set single-function grid >*/


void fint1_close (fint1 fnt);
/*< free allocated storage >*/


void vint1_close (vint1 fnt);
/*< free allocated storage >*/


float fint1_apply (fint1 fnt /* interpolation object */, 
		   int i     /* grid point */, 
		   float x   /* offset */, 
		   bool der  /* to compute derivative */);
/*< interpolate >*/


void vint1_apply (vint1 fnt /* interpolation object */, 
		  int i     /* grid point */, 
		  float x   /* offset */, 
		  bool der  /* to compute derivative */, 
		  float* f  /* output value [dim] */);
/*< interpolate >*/


void stretch(fint1 str                  /* interpolation object */, 
	     mapfunc map                /* mapping function */,
	     int n1, float d1, float o1 /* old sampling */,
	     int n2, float d2, float o2 /* new sampling */,
	     float *trace               /* new trace [n2] */,
	     float maxstr               /* maximum stretch */);
/*< trace interpolation >*/

#endif
