/* This file is automatically generated. DO NOT EDIT! */

#ifndef _zomig_h
#define _zomig_h


#include <rsf.h>


void zomig_init(bool verb_,
		bool incore_,  /* keep shot wavefield in core */
		float eps_,
		bool twoway_,
		float dtmax,
		sf_axis az_      /* depth */,
		sf_axis aw_      /* frequency */,
		sf_axis ae_      /* experiment */,
		sf_axis amx_     /* i-line (data/image) */,
		sf_axis amy_     /* x-line (data/image) */,
		sf_axis alx_     /* i-line (slowness) */,
		sf_axis aly_     /* x-line (slowness) */,
		int tmx, int tmy /* taper size */,
		int pmx, int pmy /* padding in the k domain */,
		int nrmax        /* maximum number of references */,
		sf_fslice slow_);
/*< initialize >*/


void zomig_close(void);
/*< free allocated storage >*/


void zomig_aloc();
/*< allocate migration storage >*/


void zomig_free();
/*< free migration storage >*/


void zomig(bool inv    /* forward/adjoint flag */, 
	   sf_fslice data /* data  [nw][nmy][nmx] */,
	   sf_fslice imag /* image [nz][nmy][nmx] */);
/*< Apply migration/modeling >*/


void zodtm(bool inv    /* forward/adjoint flag */, 
	   bool causal,
	   sf_fslice data /* data [nw][nmy][nmx] */,
	   sf_fslice wfld /* wfld [nw][nmy][nmx] */);
/*< Apply upward/downward datuming >*/


void zowfl(bool inv    /* forward/adjoint flag */, 
	   bool causal,
	   sf_fslice data /*      data [nw][nmy][nmx] */,
	   sf_fslice wfld /* wavefield [nw][nmy][nmx] */);
/*< Save wavefield from downward continuation >*/

#endif
